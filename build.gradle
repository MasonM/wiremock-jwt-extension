plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '8.1.0'
    id 'org.owasp.dependencycheck' version '8.4.0'
}

project.ext {
    versions = [
        guava       : '32.1.2-jre',
        jackson     : '2.15.2',
        junitJupiter: '5.10.0'
    ]
}

sourceCompatibility = 11
targetCompatibility = 11

group = 'com.github.masonm'
version = '1.0.0'

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

jar {
    archiveBaseName = 'wiremock-jwt-extension'
    finalizedBy shadowJar
}

shadowJar {
    archiveClassifier = '' // overwrite jar
    relocate "com.fasterxml.jackson", 'com.github.masonm.com.fasterxml.jackson'
}

task standaloneJar(type: Jar) {
    archiveClassifier = 'standalone'

    manifest {
        attributes("Main-Class": "com.github.masonm.JwtExtensionStandalone")
    }

    from {
        (configurations.compileClasspath + configurations.shadow).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    with jar
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives javadocJar, sourcesJar, standaloneJar
}

signing {
    required {
        !version.toString().contains("SNAPSHOT") && (gradle.taskGraph.hasTask("uploadArchives") || gradle.taskGraph.hasTask("publish"))
    }
    sign publishing.publications
}

ext {
    ossrhUsername = project.hasProperty('ossrhUsername') ? ossrhUsername : ''
    ossrhPassword = project.hasProperty('ossrhPassword') ? ossrhPassword : ''
}

publishing {
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }

    publications {
        mavenJava(MavenPublication) { publication ->
            artifactId = "${jar.getArchiveBaseName().get()}"
            from components.java
            artifact standaloneJar

            pom {
                name = 'wiremock-jwt-extension'
                description = 'Wiremock request matcher and stub mapping transformer for JSON Web Tokens (JWT)'
                url = 'https://github.com/MasonM/wiremock-jwt-extension'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'masonm'
                        name = 'Mason Malone'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/MasonM/wiremock-jwt-extension.git'
                    developerConnection = 'scm:git:ssh://github.com:MasonM/wiremock-jwt-extension.git'
                    url = 'https://github.com/MasonM/wiremock-jwt-extension'
                }
            }
        }
    }
}

dependencies {
    api platform("com.fasterxml.jackson:jackson-bom:$versions.jackson")
    api "com.fasterxml.jackson.core:jackson-core",
            "com.fasterxml.jackson.core:jackson-databind"
    api "commons-codec:commons-codec:1.16.0"

    shadow "org.wiremock:wiremock:3.0.4"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junitJupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junitJupiter"
    testCompileOnly "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$versions.junitJupiter"
    testImplementation "com.google.guava:guava:$versions.guava"
    testImplementation "org.jmock:jmock:2.12.0"
    testImplementation "org.jmock:jmock-junit4:2.12.0"
    testImplementation "org.skyscreamer:jsonassert:1.5.1"
    testImplementation "com.toomuchcoding.jsonassert:jsonassert:0.6.2"
    testImplementation "org.wiremock:wiremock:3.0.4"
    testImplementation "org.wiremock:wiremock:3.0.4:tests"
}

wrapper {
    gradleVersion = '8.0.1'
    distributionType = Wrapper.DistributionType.BIN
}
